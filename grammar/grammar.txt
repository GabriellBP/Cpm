S = Code

Code = DeclVarG Code
Code = DeclVarG
Code = DeclFunc Code
Code = DeclFunc

DeclVarG = DeclVar

DeclVar = 'id' RealType 'lineEnd'
DeclVar = 'id' RealType 'commaSep' DeclVar
DeclVar = 'id' RealType 'opAssign' Expression 'lineEnd'
DeclVar = 'id' RealType 'opAssign' Expression 'commaSep' DeclVar

RealType = 'colonSep' TypeAtomic
RealType = 'colonSep' TypeArray

TypeAtomic = 'tInt'
TypeAtomic = 'tFloat'
TypeAtomic = 'tBool'
TypeAtomic = 'tChar'
TypeAtomic = 'tString'

TypeArray = TypeArray 'arrayBeg' 'consNumInt' 'arrayEnd'
TypeArray = TypeAtomic 'arrayBeg' 'consNumInt' 'arrayEnd'

Literal = 'consNumInt'
Literal = 'consNumFlo'
Literal = 'consBool'
Literal = 'consChar'
Literal = 'consString'
Literal = LiteralArray

LiteralArray = 'arraybeg' ExpressionList 'arrayEnd'

Expression = ExprLogicOr

ExprLogicOr = ExprLogicOr 'opLogicOr' ExprLogicAnd
ExprLogicOr = ExprLogicAnd
ExprLogicAnd = ExprLogicAnd 'opLogicAnd' ExprEquals
ExprLogicAnd = ExprEquals
ExprEquals = ExprEquals 'opEquals' ExprAditiv
ExprEquals = ExprMult 'opRel' ExprAditiv
ExprEquals = ExprAditiv
ExprAditiv = ExprAditiv 'opPlus' ExprMult
ExprAditiv = ExprAditiv 'opMinus' ExprMult
ExprAditiv = ExprMult
ExprMult = ExprMult 'opMult' ExprExp
ExprMult = ExprExp
ExprExp = ExprExp 'opExp' ExprUnitary
ExprExp = ExprUnitary
ExprUnitary = 'opUnMinus' ExprUnitary
ExprUnitary = 'opNot' ExprUnitary
ExprUnitary = 'paramBeg' ExprLogicOr 'paramEnd'
ExprUnitary = 'id'
ExprUnitary = 'id' MatrixIndex
ExprUnitary = 'id' FuncParamsReal
ExprUnitary = 'rwLength' FuncParamsReal
ExprUnitary = Literal

ExpressionList = Expression
ExpressionList = ExpressionList 'commaSep' Expression

MatrixIndex = MatrixIndex 'arrayBeg' Expression 'arrayEnd'
MatrixIndex = 'arrayBeg' Expression 'arrayEnd'

Assign = 'id' 'opAssign' Expression 'lineEnd'
Assign = 'id' MatrixIndex 'opAssign' Expression 'lineEnd'

LoopWhCom = 'rwWhile' 'paramBeg' Expression 'paramEnd' Scope

LoopForCom = 'rwFor' 'paramBeg' Assign Expression 'paramEnd' Scope
LoopForCom = 'rwFor' 'paramBeg' Assign Expression 'lineEnd' Step 'paramEnd' Scope

Step = 'id' 'opAssign' Expression

CondCom = 'rwIf' 'paramBeg' Expression 'paramEnd' Scope
CondCom = 'rwIf' 'paramBeg' Expression 'paramEnd' Scope 'rwElif' 'paramBeg' Expression 'paramEnd' Scope
CondCom = 'rwIf' 'paramBeg' Expression 'paramEnd' Scope 'rwElif' 'paramBeg' Expression 'paramEnd' Scope 'rwElse' Scope
CondCom = 'rwIf' 'paramBeg' Expression 'paramEnd' Scope 'rwElse' Scope

PrintCom = 'rwPrint' 'paramBeg' 'consString' 'paramEnd' 'lineEnd'
PrintCom = 'rwPrint' 'paramBeg' 'consString' 'commaSep' ExpressionList 'paramEnd' 'lineEnd'

ReadCom = 'rwRead' 'paramBeg' 'consString' 'paramEnd' 'lineEnd'
ReadCom = 'rwRead' 'paramBeg' 'consString' 'commaSep' ExpressionList 'paramEnd' 'lineEnd'

CallFunc = 'id' FuncParamsReal 'lineEnd'

DeclFunc = 'main' 'paramBeg' 'paramEnd' SpecReturnType Scope
DeclFunc = 'id' FuncParamsFormal SpecReturnType Scope

SpecReturnType = 'colonSep' 'rwVoid'
SpecReturnType = 'colonSep' FormalType

FormalType = TypeAtomic
FormalType = TypeArrayUndefined

TypeArrayUndefined = TypeArrayUndefined 'arrayBeg' 'arrayEnd'
TypeArrayUndefined = TypeAtomic 'arrayBeg' 'arrayEnd'

FuncParamsFormal = 'paramBeg' 'paramEnd'
FuncParamsFormal = 'paramBeg' FuncParamsFormalR 'paramEnd'

FuncParamsFormalR = 'id' 'colonSep' FormalType
FuncParamsFormalR = 'id' 'colonSep' FormalType 'commaSep' FuncParamsFormal

FuncParamsReal = 'paramBeg' 'paramEnd'
FuncParamsReal = 'paramBeg' ExpressionList 'paramEnd'

Scope = 'scopeBeg' 'scopeEnd'
Scope = 'scopeBeg' Commands 'scopeEnd'

Commands = DeclVar Commands
Commands = DeclVar
Commands = Assign Commands
Commands = Assign
Commands = LoopWhCom Commands
Commands = LoopWhCom
Commands = LoopForCom Commands
Commands = LoopForCom
Commands = CondCom Commands
Commands = CondCom
Commands = PrintCom Commands
Commands = PrintCom
Commands = ReadCom Commands
Commands = ReadCom
Commands = CallFunc Commands
Commands = CallFunc
Commands = 'rwReturn' Expression 'lineEnd'